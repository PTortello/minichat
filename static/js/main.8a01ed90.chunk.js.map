{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","msgCounter","setMsgCounter","dummy","useRef","makeRoom","cutoff","Date","now","get","then","res","forEach","msg","timestamp","data","toDate","ref","delete","sendMessage","e","a","preventDefault","length","uid","photoURL","displayName","fetchTime","Timestamp","toString","slice","logtime","doc","set","text","FieldValue","serverTimestamp","useEffect","current","scrollIntoView","behavior","map","ChatMessage","message","id","onSubmit","autoFocus","maxLength","placeholder","value","onChange","target","type","props","messageClass","src","alt","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a01ed90.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport './App.css';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyBrbQbnUZmYNLtp4raiFoZZCiC3b1IbVhU\",\r\n  authDomain: \"minichat-jvt.firebaseapp.com\",\r\n  projectId: \"minichat-jvt\",\r\n  storageBucket: \"minichat-jvt.appspot.com\",\r\n  messagingSenderId: \"394826412413\",\r\n  appId: \"1:394826412413:web:fb270f8d153a6945455c14\"\r\n});\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nfunction App() {\r\n  const [user] = useAuthState(auth);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"grid-container\">\r\n          <div>minichat! ðŸ¦†</div>\r\n          <div className=\"grid-right\"><SignOut /></div>\r\n        </div>\r\n      </header>\r\n      <section>\r\n        { user ? <ChatRoom /> : <SignIn /> }\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SignIn() {\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  }\r\n  return (\r\n    <button className=\"sign-in\" onClick={ signInWithGoogle }>Entrar com Google</button>\r\n  )\r\n}\r\n\r\nfunction SignOut() {\r\n  return auth.currentUser && (\r\n    <button className=\"sign-out\" onClick={ () => auth.signOut() }>Sair</button>\r\n  )\r\n}\r\n\r\nfunction ChatRoom() {\r\n  const messagesRef = firestore.collection('messages');\r\n  const query = messagesRef.orderBy('timestamp').limit(1000);\r\n  const [messages] = useCollectionData(query, { idField: 'id' });\r\n  const [formValue, setFormValue] = useState('');\r\n  const [msgCounter, setMsgCounter] = useState(0);\r\n  const dummy = useRef();\r\n\r\n  const makeRoom = () => {\r\n    if (msgCounter < 10) {\r\n      setMsgCounter(msgCounter + 1);\r\n    } else {\r\n      const cutoff = new Date(Date.now() - 10 * 60 * 1000);\r\n      messagesRef.get().then((res) => {\r\n        res.forEach((msg) => {\r\n          const {timestamp} = msg.data();\r\n          if (timestamp?.toDate() < cutoff) {\r\n            msg.ref.delete();\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (formValue.length > 0) {\r\n      const { uid, photoURL, displayName } = auth.currentUser;\r\n      const fetchTime = firebase.firestore.Timestamp.now().toDate().toString().slice(4, 24);\r\n      const logtime = fetchTime.slice(12, 20) + ' ' + fetchTime.slice(0, 11);\r\n      await messagesRef.doc(displayName + '-' + logtime).set({\r\n        text: formValue,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid,\r\n        photoURL,\r\n        displayName\r\n      })\r\n      setFormValue('');\r\n    }\r\n    makeRoom();\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const scrollDown = () => {\r\n      dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n    scrollDown();\r\n  }, [messagesRef]);\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\r\n        <div ref={ dummy }></div>\r\n      </main>\r\n      <form onSubmit={ sendMessage }>\r\n        <input\r\n          autoFocus\r\n          maxLength=\"200\"\r\n          placeholder={\"Envie uma mensagem\"}\r\n          value={ formValue }\r\n          onChange={(e) => setFormValue(e.target.value)}\r\n        />\r\n        <button type=\"submit\">ðŸ’¬</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction ChatMessage(props) {\r\n  const { text, uid, photoURL, displayName } = props.message;\r\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\r\n\r\n  return (\r\n    <div className={`message ${ messageClass }`}>\r\n      <img src={ photoURL } alt=\"avatar\" />\r\n      <p>{ displayName }: { text }</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}