{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","counter","setCounter","dummy","useRef","updateCounter","a","c","doc","set","current","sendMessage","e","preventDefault","uid","photoURL","displayName","get","then","data","toString","text","createdAt","FieldValue","serverTimestamp","msgLimit","useEffect","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","autoFocus","maxLength","placeholder","value","onChange","target","type","props","messageClass","src","alt","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d9faf2a.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\n\n// firebase sdk\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBrbQbnUZmYNLtp4raiFoZZCiC3b1IbVhU\",\n  authDomain: \"minichat-jvt.firebaseapp.com\",\n  projectId: \"minichat-jvt\",\n  storageBucket: \"minichat-jvt.appspot.com\",\n  messagingSenderId: \"394826412413\",\n  appId: \"1:394826412413:web:fb270f8d153a6945455c14\"\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"grid-container\">\n          <div>minichat! ðŸ¦†</div>\n          <div className=\"grid-right\"><SignOut /></div>\n        </div>\n      </header>\n      <section>\n        { user ? <ChatRoom /> : <SignIn /> }\n      </section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n  return (\n    <button className=\"sign-in\" onClick={ signInWithGoogle }>Entrar com Google</button>\n  )\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={ () => auth.signOut() }>Sair</button>\n  )\n}\n\nfunction ChatRoom() {\n  const msgLimit = 100;\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(msgLimit);\n  const [messages] = useCollectionData(query, { idField: 'id' });\n  const [formValue, setFormValue] = useState('');\n  const [counter, setCounter] = useState(0);\n  const dummy = useRef();\n\n  const updateCounter = async (c = 0) => {\n    await messagesRef.doc(\"counter\").set({current: c});\n  }\n  \n  const sendMessage = async (e) => {\n    e.preventDefault();\n    const { uid, photoURL, displayName } = auth.currentUser;\n    await messagesRef.doc(\"counter\").get().then((c) => {\n      setCounter(c.data().current);\n    })\n    await messagesRef.doc(counter.toString()).set({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n      displayName\n    });\n    setFormValue('');\n    (counter === msgLimit - 1) ? updateCounter() : updateCounter(counter + 1);\n  }\n  \n  useEffect(() => {\n    const scrollDown = () => {\n      dummy.current.scrollIntoView({ behavior: 'smooth' });\n    }\n    scrollDown();\n  }, [messages]);\n  \n  return (\n    <>\n      <main>\n        {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n        <div ref={ dummy }></div>\n      </main>\n      <form onSubmit={ sendMessage }>\n        <input\n          autoFocus\n          maxLength=\"200\"\n          placeholder={\"Envie uma mensagem\"}\n          value={ formValue }\n          onChange={(e) => setFormValue(e.target.value)}\n        />\n        <button type=\"submit\">ðŸ’¬</button>\n      </form>\n    </>\n  )\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL, displayName } = props.message;\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (\n    <div className={`message ${ messageClass }`}>\n      <img src={ photoURL } alt=\"avatar\" />\n      <p>{ displayName }: { text }</p>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}